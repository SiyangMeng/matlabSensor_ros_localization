<launch>

  <param name="use_sim_time" value="true" />

    <node pkg="rosbag" type="play" name="player" 
        args="--clock /media/msy/æ–‡æ¡£/orbit/matlabSensor_ros_localization/gpsins_ws/data/sea.bag" >
    </node>

<include file="$(find zed_wrapper)/launch/zed2.launch"/>

<node pkg="tf" type="static_transform_publisher" name="tf_tag_tgt" args="0 0 0 0.5 -0.5 -0.5 -0.5 tag_298_ tgt 30" />

    <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" respawn="true" output="screen">
      <param name="magnetic_declination_radians" value="0"/>
      <param name="roll_offset" value="0"/>
      <param name="pitch_offset" value="0"/>
       <!-- Your IMU should read 0 for yaw at *magnetic* north. 
       If it doesn't, enter the offset here (desired_value = offset + sensor_raw_value). -->
      <param name="yaw_offset" value="0"/>
      <param name="zero_altitude" value="false"/>
      <!-- Placeholders for input remapping. Set your topic names as the "to" values.
        <remap from="/imu/data" to="" />
        <remap from="/odometry/filtered to="" />
        <remap from="/gps/fix" to="" />
      -->

      <!-- Placeholders for output remapping.
        <remap from="/odometry/gps to="" />
      -->
    </node>

    <!-- <node pkg="robot_localization" type="ekf_localization_node" name="ekf_odom" output="screen">
        <param name="use_sim_time" value="false"/>
        <rosparam file="$(find fuse_gps_ins)/params/ekf_odom.yaml" command="load"/>
    </node> -->
 

<node pkg="robot_localization" type="ekf_localization_node" name="ekf_odom2" clear_params="true">
      <param name="use_sim_time" value="true"/>
      <param name="frequency" value="15"/>  
      <param name="sensor_timeout" value="0.1"/>  
      <param name="two_d_mode" value="true"/>

      <param name="odom_frame" value="odom"/>
      <param name="base_link_frame" value="base_link"/>
      <param name="world_frame" value="odom"/>

      <!-- The filter accepts an arbitrary number of inputs from each input message type (Odometry, PoseStamped,
           TwistStamped, Imu). To add a new one, simply append the next number in the sequence to its base name,
           e.g., odom0, odom1, twist0, twist1, imu0, imu1, imu2, etc. The value should be the topic name. -->

     <param name="pose0" value="/gps/pose"/>
     <param name="pose1" value="/mag/data"/>
      <param name="twist0" value="/gps/twist"/>
      <param name="imu0" value="/imu/data"/>

      <!-- Each sensor reading updates some or all of the filter's state. These options give you greater control over
           which values from each measurement are fed to the filter. For example, if you have an odometry message as input,
           but only want to use its Z position value, then set the entire vector to false, except for the third entry.
           The order of the values is x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Note that not some message
           types lack certain variables. For example, a TwistWithCovarianceStamped message has no pose information, so the first
           six values would be meaningless in that case. -->

<!-- Rahul:I've set omega for yaw as true as motor encoders will give us the angular velocity -->

      <rosparam param="pose0_config">[false,  false,  false, 
                                      false, false, true, 
                                      false, false, false, 
                                      false, false, false,
                                      false, false, false]</rosparam>
      <rosparam param="pose1_config">[true, true, true,
                                       false,  false,  false, 
                                      false, false, false, 
                                      false, false, false,
                                      false, false, false]</rosparam>
      <rosparam param="twist0_config">[false, false, false, 
                                       false, false, false, 
                                       true,  false,  false, 
                                       false,  false,  false,
                                       false, false, false]</rosparam>

<!-- Rahul:Only the yaw and yaw(velocity) is set as true -->

      <rosparam param="imu0_config">[false, false, false, 
                                     true,  true,  true, 
                                     false,  false,  false, 
                                     true,  true,  true,
                                     true,  true,  true]</rosparam>

      <!-- The best practice for including new sensors in robot_localization's state estimation nodes is to pass in velocity 
           measurements and let the nodoes integrate them. However, this isn't always feasible, and so the state estimation
           nodes support fusion of absolute measurements. If you have more than one sensor providing absolute measurements, 
           however, you will quickly run into problems, as the sensors will inevitably diverge from one another, causing the 
           filter to jump back and forth rapidly. To combat this situation, you can set the sensor's differential parameter 
           to true. This will carry out differential integration of the sensor data, i.e., it will repeatedly integrate the 
           difference between a given measurement and the previous measurement from that sensor. 
           NOTE: this only applies to sensors that provide absolute measurements, so Twist messages are not supported. -->

      <param name="pose0_differential" value="false"/>
      <param name="imu0_differential" value="true"/>

      <!-- Debug settings. Not for the faint of heart. Outputs a ludicrous amount of information to the file
           specified by debug_out_file. I hope you like matrices! -->
      <param name="debug"           value="false"/>
      <param name="debug_out_file"  value="debug_ekf_localization.txt"/>
      <!-- The process noise covariance matrix can be difficult to tune, and can vary for each application, so it
           is exposed as a configuration parameter. PLEASE NOTE that every value in this matrix *must* be specified
           as real-valued, i.e., it must have a decimal point. Integers don't load correctly. The values are ordered
           as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. -->
      <rosparam param="process_noise_covariance">[0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.0, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.00, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015]</rosparam>

    </node>

     <node pkg="rviz" type="rviz" name="rviz" args="-d $(find fuse_gps_ins)/rviz/default.rviz"/>



</launch>